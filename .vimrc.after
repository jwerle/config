" globals
let g:NERDTreeWinPos = "right"
let g:JSHintHighlightErrorLine = 0

" Status line configuration
set statusline+=%#warningmsg#  " Add Error ruler.
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
nnoremap <silent> ` :Errors<CR>

" C Syntastic options
let g:syntastic_c_auto_refresh_includes = 1
let g:syntastic_c_include_dirs = [ "include", "deps", "build/include", "Headers", "headers", "build/Headers" ]
let g:syntastic_c_check_header = 1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs = 1

" Read the clang complete file
let g:syntastic_objc_include_dirs = g:syntastic_c_include_dirs
let g:syntastic_objc_config_file = '.clang_complete'

" Disable auto completion, always <c-x> <c-o> to complete
let g:clang_complete_auto = 0
let g:clang_use_library = 1
let g:clang_periodic_quickfix = 0
let g:clang_close_preview = 1

" For Objective-C, this needs to be active, otherwise multi-parameter methods won't be completed correctly
let g:clang_snippets = 1

" Snipmate does not work anymore, ultisnips is the recommended plugin
let g:clang_snippets_engine = 'ultisnips'

" This might change depending on your installation
let g:clang_exec = '/usr/local/opt/llvm/bin/clang'
let g:clang_library_path = '/usr/local/opt/llvm/lib/libclang.dylib'

" jsdoc
let g:jsdoc_additional_descriptions = 1
let g:jsdoc_access_descriptions = 1
let g:jsdoc_enable_es6 = 1

" vim-javascript
let g:javascript_plugin_jsdoc = 1

" nerdtree setup
let NERDTreeShowBookmarks = 0
let NERDChristmasTree = 1
let NERDTreeHijackNetrw = 1
let NERDTreeQuitOnOpen = 1
let NERDTreeChDirMode = 2
let NERDTreeDirArrows = 0

" map ESC
imap jj <ESC>

" switch between buffers
noremap <tab> :bn<CR>
noremap <S-tab> :bp<CR>

" Saving and exit
nmap <leader>q :q<CR>
nmap <leader>w :w<CR>
nmap <leader>d :bd<CR>

noremap <leader>ww <NOP>

" ctrl-p setup
map <leader>p :CtrlP<cr>

set guifont=Roboto:h12
" Removes top toolbar
set guioptions-=T
" Removes right hand scroll bar
set guioptions-=r
" Removes left hand scroll bar
set go-=L
" puts a $ marker for the end of words/lines in cw/c$ commands
set cpoptions+=$
" Adds `./deps/**' to the local include path for C files
set path+=./deps/**

" plum theme
set term=screen-256color
set bg=dark
colorscheme plum

" setup undo magic
" make sure `~/tmp/vim/{backup,undo}' exists
set undofile
set undodir=~/tmp/vim/undo
set undolevels=1000
set undoreload=1000
set backupdir=~/tmp/vim/backup

" displays <% %> correctly
autocmd User Rails let b:surround_{char2nr('-')} = "<% \r %>"
autocmd FileType js,javascript,glsl,c,cc,cpp,sly highlight OverLength ctermbg=red ctermfg=white guibg=#592929
autocmd FileType js,javascript,glsl,c,cc,cpp,sly  match OverLength /\%81v.\+/

" forward html syntax to ejs file
au BufNewFile,BufRead *.ejs set filetype=html
au BufNewFile,BufRead *.tmpl set filetype=html
au BufNewFile,BufRead *.mu set filetype=html
au BufNewFile,BufRead *.tpl set filetype=html

" javascript syntax files
au BufNewFile,BufRead *.pr set syntax=javascript
au BufNewFile,BufRead *.pjs set syntax=javascript
au BufNewFile,BufRead *.sly set syntax=javascript
au BufNewFile,BufRead *.ash set syntax=javascript

au BufNewFile,BufRead *.pr set filetype=javascript
au BufNewFile,BufRead *.pjs set filetype=javascript

au BufNewFile,BufRead *.ash set filetype=javascript

au BufNewFile,BufRead Servicefile set filetype=sh
au BufNewFile,BufRead Servicefile set syntax=sh

au BufNewFile,BufRead .npmignore set filetype=sh
au BufNewFile,BufRead .npmignore set syntax=sh

au BufNewFile,BufRead .*vimrc* set filetype=vim
au BufNewFile,BufRead .*vimrc* set syntax=vim

au BufNewFile,BufRead .*conf* set filetype=conf
au BufNewFile,BufRead .*conf* set syntax=conf

au BufNewFile,BufRead .babelrc set filetype=json
au BufNewFile,BufRead .babelrc set syntax=json

" source local `./.vimrc' file
if filereadable(glob("./.vimrc"))
  source ./.vimrc
endif
